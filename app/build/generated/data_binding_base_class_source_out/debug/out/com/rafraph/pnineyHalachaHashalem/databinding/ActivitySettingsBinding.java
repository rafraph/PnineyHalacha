// Generated by view binder compiler. Do not edit!
package com.rafraph.pnineyHalachaHashalem.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import com.rafraph.pnineyHalachaHashalem.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView blackScreen;

  @NonNull
  public final TextView brightScreen;

  @NonNull
  public final TextView chooseSize;

  @NonNull
  public final TextView chooseTochen;

  @NonNull
  public final ImageView dialogX;

  @NonNull
  public final ImageView imBlackScreen;

  @NonNull
  public final ImageView imEn;

  @NonNull
  public final ImageView imEs;

  @NonNull
  public final ImageView imEsDown;

  @NonNull
  public final ImageView imF;

  @NonNull
  public final ImageView imFDown;

  @NonNull
  public final ImageView imH;

  @NonNull
  public final ImageView imLastLocation;

  @NonNull
  public final ImageView imR;

  @NonNull
  public final ImageView imSo;

  @NonNull
  public final ImageView imWhiteScreen;

  @NonNull
  public final TextView langof;

  @NonNull
  public final TextView lastLocation;

  @NonNull
  public final RelativeLayout layoutRoot;

  @NonNull
  public final LinearLayout lnrOption2;

  @NonNull
  public final LinearLayout lnrOption5;

  @NonNull
  public final LinearLayout lnrOption6;

  @NonNull
  public final LinearLayout lnrOption7;

  @NonNull
  public final LinearLayout lnrOption8;

  @NonNull
  public final LinearLayout lnrOptions;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final ImageView myMarks;

  @NonNull
  public final RadioGroup radios;

  @NonNull
  public final TextView screenOn;

  @NonNull
  public final SeekBar seekBar6;

  @NonNull
  public final ImageView settings;

  @NonNull
  public final TextView textSizeExm;

  @NonNull
  public final ImageView tooPy;

  private ActivitySettingsBinding(@NonNull RelativeLayout rootView, @NonNull TextView blackScreen,
      @NonNull TextView brightScreen, @NonNull TextView chooseSize, @NonNull TextView chooseTochen,
      @NonNull ImageView dialogX, @NonNull ImageView imBlackScreen, @NonNull ImageView imEn,
      @NonNull ImageView imEs, @NonNull ImageView imEsDown, @NonNull ImageView imF,
      @NonNull ImageView imFDown, @NonNull ImageView imH, @NonNull ImageView imLastLocation,
      @NonNull ImageView imR, @NonNull ImageView imSo, @NonNull ImageView imWhiteScreen,
      @NonNull TextView langof, @NonNull TextView lastLocation, @NonNull RelativeLayout layoutRoot,
      @NonNull LinearLayout lnrOption2, @NonNull LinearLayout lnrOption5,
      @NonNull LinearLayout lnrOption6, @NonNull LinearLayout lnrOption7,
      @NonNull LinearLayout lnrOption8, @NonNull LinearLayout lnrOptions,
      @NonNull LinearLayout main, @NonNull ImageView myMarks, @NonNull RadioGroup radios,
      @NonNull TextView screenOn, @NonNull SeekBar seekBar6, @NonNull ImageView settings,
      @NonNull TextView textSizeExm, @NonNull ImageView tooPy) {
    this.rootView = rootView;
    this.blackScreen = blackScreen;
    this.brightScreen = brightScreen;
    this.chooseSize = chooseSize;
    this.chooseTochen = chooseTochen;
    this.dialogX = dialogX;
    this.imBlackScreen = imBlackScreen;
    this.imEn = imEn;
    this.imEs = imEs;
    this.imEsDown = imEsDown;
    this.imF = imF;
    this.imFDown = imFDown;
    this.imH = imH;
    this.imLastLocation = imLastLocation;
    this.imR = imR;
    this.imSo = imSo;
    this.imWhiteScreen = imWhiteScreen;
    this.langof = langof;
    this.lastLocation = lastLocation;
    this.layoutRoot = layoutRoot;
    this.lnrOption2 = lnrOption2;
    this.lnrOption5 = lnrOption5;
    this.lnrOption6 = lnrOption6;
    this.lnrOption7 = lnrOption7;
    this.lnrOption8 = lnrOption8;
    this.lnrOptions = lnrOptions;
    this.main = main;
    this.myMarks = myMarks;
    this.radios = radios;
    this.screenOn = screenOn;
    this.seekBar6 = seekBar6;
    this.settings = settings;
    this.textSizeExm = textSizeExm;
    this.tooPy = tooPy;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blackScreen;
      TextView blackScreen = ViewBindings.findChildViewById(rootView, id);
      if (blackScreen == null) {
        break missingId;
      }

      id = R.id.brightScreen;
      TextView brightScreen = ViewBindings.findChildViewById(rootView, id);
      if (brightScreen == null) {
        break missingId;
      }

      id = R.id.chooseSize;
      TextView chooseSize = ViewBindings.findChildViewById(rootView, id);
      if (chooseSize == null) {
        break missingId;
      }

      id = R.id.chooseTochen;
      TextView chooseTochen = ViewBindings.findChildViewById(rootView, id);
      if (chooseTochen == null) {
        break missingId;
      }

      id = R.id.dialog_x;
      ImageView dialogX = ViewBindings.findChildViewById(rootView, id);
      if (dialogX == null) {
        break missingId;
      }

      id = R.id.im_black_screen;
      ImageView imBlackScreen = ViewBindings.findChildViewById(rootView, id);
      if (imBlackScreen == null) {
        break missingId;
      }

      id = R.id.im_en;
      ImageView imEn = ViewBindings.findChildViewById(rootView, id);
      if (imEn == null) {
        break missingId;
      }

      id = R.id.im_es;
      ImageView imEs = ViewBindings.findChildViewById(rootView, id);
      if (imEs == null) {
        break missingId;
      }

      id = R.id.im_es_down;
      ImageView imEsDown = ViewBindings.findChildViewById(rootView, id);
      if (imEsDown == null) {
        break missingId;
      }

      id = R.id.im_f;
      ImageView imF = ViewBindings.findChildViewById(rootView, id);
      if (imF == null) {
        break missingId;
      }

      id = R.id.im_f_down;
      ImageView imFDown = ViewBindings.findChildViewById(rootView, id);
      if (imFDown == null) {
        break missingId;
      }

      id = R.id.im_h;
      ImageView imH = ViewBindings.findChildViewById(rootView, id);
      if (imH == null) {
        break missingId;
      }

      id = R.id.im_last_location;
      ImageView imLastLocation = ViewBindings.findChildViewById(rootView, id);
      if (imLastLocation == null) {
        break missingId;
      }

      id = R.id.im_r;
      ImageView imR = ViewBindings.findChildViewById(rootView, id);
      if (imR == null) {
        break missingId;
      }

      id = R.id.im_so;
      ImageView imSo = ViewBindings.findChildViewById(rootView, id);
      if (imSo == null) {
        break missingId;
      }

      id = R.id.im_white_screen;
      ImageView imWhiteScreen = ViewBindings.findChildViewById(rootView, id);
      if (imWhiteScreen == null) {
        break missingId;
      }

      id = R.id.langof;
      TextView langof = ViewBindings.findChildViewById(rootView, id);
      if (langof == null) {
        break missingId;
      }

      id = R.id.lastLocation;
      TextView lastLocation = ViewBindings.findChildViewById(rootView, id);
      if (lastLocation == null) {
        break missingId;
      }

      RelativeLayout layoutRoot = (RelativeLayout) rootView;

      id = R.id.lnrOption2;
      LinearLayout lnrOption2 = ViewBindings.findChildViewById(rootView, id);
      if (lnrOption2 == null) {
        break missingId;
      }

      id = R.id.lnrOption5;
      LinearLayout lnrOption5 = ViewBindings.findChildViewById(rootView, id);
      if (lnrOption5 == null) {
        break missingId;
      }

      id = R.id.lnrOption6;
      LinearLayout lnrOption6 = ViewBindings.findChildViewById(rootView, id);
      if (lnrOption6 == null) {
        break missingId;
      }

      id = R.id.lnrOption7;
      LinearLayout lnrOption7 = ViewBindings.findChildViewById(rootView, id);
      if (lnrOption7 == null) {
        break missingId;
      }

      id = R.id.lnrOption8;
      LinearLayout lnrOption8 = ViewBindings.findChildViewById(rootView, id);
      if (lnrOption8 == null) {
        break missingId;
      }

      id = R.id.lnrOptions;
      LinearLayout lnrOptions = ViewBindings.findChildViewById(rootView, id);
      if (lnrOptions == null) {
        break missingId;
      }

      id = R.id.main;
      LinearLayout main = ViewBindings.findChildViewById(rootView, id);
      if (main == null) {
        break missingId;
      }

      id = R.id.my_marks;
      ImageView myMarks = ViewBindings.findChildViewById(rootView, id);
      if (myMarks == null) {
        break missingId;
      }

      id = R.id.radios;
      RadioGroup radios = ViewBindings.findChildViewById(rootView, id);
      if (radios == null) {
        break missingId;
      }

      id = R.id.screenOn;
      TextView screenOn = ViewBindings.findChildViewById(rootView, id);
      if (screenOn == null) {
        break missingId;
      }

      id = R.id.seekBar6;
      SeekBar seekBar6 = ViewBindings.findChildViewById(rootView, id);
      if (seekBar6 == null) {
        break missingId;
      }

      id = R.id.settings;
      ImageView settings = ViewBindings.findChildViewById(rootView, id);
      if (settings == null) {
        break missingId;
      }

      id = R.id.textSizeExm;
      TextView textSizeExm = ViewBindings.findChildViewById(rootView, id);
      if (textSizeExm == null) {
        break missingId;
      }

      id = R.id.too_py;
      ImageView tooPy = ViewBindings.findChildViewById(rootView, id);
      if (tooPy == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((RelativeLayout) rootView, blackScreen, brightScreen,
          chooseSize, chooseTochen, dialogX, imBlackScreen, imEn, imEs, imEsDown, imF, imFDown, imH,
          imLastLocation, imR, imSo, imWhiteScreen, langof, lastLocation, layoutRoot, lnrOption2,
          lnrOption5, lnrOption6, lnrOption7, lnrOption8, lnrOptions, main, myMarks, radios,
          screenOn, seekBar6, settings, textSizeExm, tooPy);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
