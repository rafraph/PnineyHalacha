// Generated by view binder compiler. Do not edit!
package com.rafraph.pnineyHalachaHashalem.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import com.rafraph.pnineyHalachaHashalem.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class InnerSearchBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView clear;

  @NonNull
  public final RelativeLayout editTextTextToSearch;

  @NonNull
  public final ImageView goSearch;

  @NonNull
  public final RelativeLayout layoutRoot;

  @NonNull
  public final EditText title;

  private InnerSearchBinding(@NonNull RelativeLayout rootView, @NonNull ImageView clear,
      @NonNull RelativeLayout editTextTextToSearch, @NonNull ImageView goSearch,
      @NonNull RelativeLayout layoutRoot, @NonNull EditText title) {
    this.rootView = rootView;
    this.clear = clear;
    this.editTextTextToSearch = editTextTextToSearch;
    this.goSearch = goSearch;
    this.layoutRoot = layoutRoot;
    this.title = title;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static InnerSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static InnerSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.inner_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static InnerSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.clear;
      ImageView clear = ViewBindings.findChildViewById(rootView, id);
      if (clear == null) {
        break missingId;
      }

      id = R.id.editTextTextToSearch;
      RelativeLayout editTextTextToSearch = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextToSearch == null) {
        break missingId;
      }

      id = R.id.goSearch;
      ImageView goSearch = ViewBindings.findChildViewById(rootView, id);
      if (goSearch == null) {
        break missingId;
      }

      RelativeLayout layoutRoot = (RelativeLayout) rootView;

      id = R.id.title;
      EditText title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new InnerSearchBinding((RelativeLayout) rootView, clear, editTextTextToSearch,
          goSearch, layoutRoot, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
