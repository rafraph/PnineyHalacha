// Generated by view binder compiler. Do not edit!
package com.rafraph.pnineyHalachaHashalem.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import com.rafraph.pnineyHalachaHashalem.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BookmarksBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ListView Bookmarkslist;

  @NonNull
  public final ImageView bChap;

  @NonNull
  public final ImageView bChap2;

  @NonNull
  public final Button buttonDeleteAll;

  @NonNull
  public final LinearLayout lnrOption3;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final ImageView menu;

  private BookmarksBinding(@NonNull LinearLayout rootView, @NonNull ListView Bookmarkslist,
      @NonNull ImageView bChap, @NonNull ImageView bChap2, @NonNull Button buttonDeleteAll,
      @NonNull LinearLayout lnrOption3, @NonNull LinearLayout main, @NonNull ImageView menu) {
    this.rootView = rootView;
    this.Bookmarkslist = Bookmarkslist;
    this.bChap = bChap;
    this.bChap2 = bChap2;
    this.buttonDeleteAll = buttonDeleteAll;
    this.lnrOption3 = lnrOption3;
    this.main = main;
    this.menu = menu;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BookmarksBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BookmarksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bookmarks, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BookmarksBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Bookmarkslist;
      ListView Bookmarkslist = ViewBindings.findChildViewById(rootView, id);
      if (Bookmarkslist == null) {
        break missingId;
      }

      id = R.id.b_chap;
      ImageView bChap = ViewBindings.findChildViewById(rootView, id);
      if (bChap == null) {
        break missingId;
      }

      id = R.id.b_chap2;
      ImageView bChap2 = ViewBindings.findChildViewById(rootView, id);
      if (bChap2 == null) {
        break missingId;
      }

      id = R.id.buttonDeleteAll;
      Button buttonDeleteAll = ViewBindings.findChildViewById(rootView, id);
      if (buttonDeleteAll == null) {
        break missingId;
      }

      id = R.id.lnrOption3;
      LinearLayout lnrOption3 = ViewBindings.findChildViewById(rootView, id);
      if (lnrOption3 == null) {
        break missingId;
      }

      LinearLayout main = (LinearLayout) rootView;

      id = R.id.menu;
      ImageView menu = ViewBindings.findChildViewById(rootView, id);
      if (menu == null) {
        break missingId;
      }

      return new BookmarksBinding((LinearLayout) rootView, Bookmarkslist, bChap, bChap2,
          buttonDeleteAll, lnrOption3, main, menu);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
